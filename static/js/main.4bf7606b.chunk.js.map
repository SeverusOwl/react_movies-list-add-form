{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","clearState","setState","getMovie","newMov","handleChange","event","target","value","key","name","handleSubmit","preventDefault","props","find","m","addMov","onSubmit","this","type","placeholder","onChange","required","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"oyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,OCIfC,G,MAAb,4MACEC,MAAe,CACbd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,WAAa,WACX,EAAKC,SAAS,CACZhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,MAfd,EAmBEK,SAAW,SAACH,GACV,IAAMI,EAAM,eAAQJ,GAIpB,OAFA,EAAKC,aAEEG,GAxBX,EA2BEC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MACFC,EADN,EAAeC,KAGf,EAAKR,SAAL,eAAiBO,EAAMD,KA/B3B,EAkCEG,aAAe,SAACL,GACdA,EAAMM,iBAEN,IAAMf,EAAQ,EAAKM,SAAS,EAAKH,OAE5B,EAAKa,MAAMlB,OAAOmB,MAAK,SAAAC,GAAC,OAAIA,EAAEjB,SAAWD,EAAMC,WAClD,EAAKe,MAAMG,OAAO,EAAKb,SAAS,EAAKH,SAxC3C,4CA4CE,WACE,OACE,uBAAMiB,SAAUC,KAAKP,aAAcrB,UAAU,OAA7C,UACE,oBAAIA,UAAU,cAAd,mBACA,uBACE6B,KAAK,OACLT,KAAK,QACLF,MAAOU,KAAKlB,MAAMd,MAClBkC,YAAY,kBACZC,SAAUH,KAAKb,aACfiB,UAAQ,IAEV,oBAAIhC,UAAU,cAAd,yBACA,0BACEoB,KAAK,cACLF,MAAOU,KAAKlB,MAAMb,YAClBiC,YAAY,wBACZC,SAAUH,KAAKb,aACff,UAAU,mBAEZ,oBAAIA,UAAU,cAAd,qBACA,uBACE6B,KAAK,OACLT,KAAK,SACLF,MAAOU,KAAKlB,MAAMZ,OAClBgC,YAAY,oBACZC,SAAUH,KAAKb,aACfiB,UAAQ,IAEV,oBAAIhC,UAAU,cAAd,sBACA,uBACE6B,KAAK,OACLT,KAAK,UACLF,MAAOU,KAAKlB,MAAMX,QAClB+B,YAAY,2BACZC,SAAUH,KAAKb,aACfiB,UAAQ,IAEV,oBAAIhC,UAAU,cAAd,qBACA,uBACE6B,KAAK,OACLT,KAAK,SACLF,MAAOU,KAAKlB,MAAMF,OAClBsB,YAAY,oBACZC,SAAUH,KAAKb,aACfiB,UAAQ,IAEV,uBACA,wBAAQH,KAAK,SAAS7B,UAAU,eAAhC,wBA5FR,GAA8BiC,c,QCNjBC,EAAb,4MACExB,MAAe,CACbL,OAAQ8B,GAFZ,EAKET,OAAS,SAACZ,GACJA,GACF,EAAKF,UAAS,SAAAF,GACZ,MAAQ,CACNL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBS,SATpC,4CAeE,WACE,IAAQT,EAAWuB,KAAKlB,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAU0B,OAAQE,KAAKF,OAAQrB,OAAQA,aAxBjD,GAAyB+B,IAAMH,WCN/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4bf7606b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ninterface Props {\n  addMov: (newMov: State) => void;\n  movies: Movie[];\n}\n\ninterface State {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n}\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  getMovie = (state: any) => {\n    const newMov = { ...state };\n\n    this.clearState();\n\n    return newMov;\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value, name } = event.target;\n    const key: keyof State = name as keyof State;\n\n    this.setState({ [key]: value } as any);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const movie = this.getMovie(this.state);\n\n    if (!this.props.movies.find(m => m.imdbId === movie.imdbId)) {\n      this.props.addMov(this.getMovie(this.state));\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <h2 className=\"form__title\">Title</h2>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"Enter the title\"\n          onChange={this.handleChange}\n          required\n        />\n        <h2 className=\"form__title\">Description</h2>\n        <textarea\n          name=\"description\"\n          value={this.state.description}\n          placeholder=\"Enter the description\"\n          onChange={this.handleChange}\n          className=\"form__textarea\"\n        />\n        <h2 className=\"form__title\">Img Url</h2>\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          placeholder=\"Enter the img url\"\n          onChange={this.handleChange}\n          required\n        />\n        <h2 className=\"form__title\">Imdb Url</h2>\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          placeholder=\"Enter the title imdb url\"\n          onChange={this.handleChange}\n          required\n        />\n        <h2 className=\"form__title\">Imdb Id</h2>\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          placeholder=\"Enter the imdb id\"\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n        <button type=\"submit\" className=\"form__button\">Add</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMov = (newMov: any) => {\n    if (newMov) {\n      this.setState(state => {\n        return ({\n          movies: [...state.movies, newMov],\n        });\n      });\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMov={this.addMov} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}